{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_LINE = 'e-split-line';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar RESIZABLE_PANE = 'e-resizable';\n/**\n * Interface to configure pane properties such as its content, size, min, max, and resizable.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' && this.paneSettings[paneIndex].resizable) {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            if (this.orientation === 'Horizontal') {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n            }\n            else {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n            }\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className !== '') {\n            addClass([this.element], className.split(' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        this.element.removeAttribute('aria-orientation');\n        this.element.setAttribute('aria-orientation', orientation);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? ((order - 1) / 2) + 1 : (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = (this.enableRtl && this.orientation === 'Horizontal') ? (order - 1) / (2) : ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            resizeHanlder.style.width = sizeValue;\n        }\n        else {\n            resizeHanlder.style.height = sizeValue;\n        }\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        if (this.orientation === 'Horizontal') {\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        else {\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            separator.style.height = isNullOrUndefined(this.separatorSize) ? 'auto' : this.separatorSize + 'px';\n        }\n        this.addMouseActions(separator);\n        this.addResizeHandler(separator);\n        return separator;\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                var separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                }\n                else {\n                    this.hideResizer(separator);\n                }\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        separator.addEventListener('mouseover', function () {\n            addClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = !this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        var isSeparatorLine = true;\n        if (target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR_LINE)) {\n            isSeparatorLine = false;\n        }\n        return isSeparatorLine;\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return (this.enableRtl) ? prePaneIndex + 1 : prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return (this.enableRtl) ? nextPaneIndex : nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return (this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString();\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag) {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        var templateFn = compile(template);\n        var fromElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            fromElements.push(item);\n        }\n        append([].slice.call(fromElements), toElement);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.element.setAttribute('aria-orientation', this.orientation);\n        this.element.setAttribute('role', 'splitter');\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // to get only div element\n                if (child[i].nodeType === 1) {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        detach(this.element);\n        this.element = this.wrapper;\n        this.wrapperParent.appendChild(this.wrapper);\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        if (this.orientation === 'Horizontal') {\n            addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n        }\n        else {\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        }\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","EventHandler","remove","onMouseDown","isResizable","showResizer","select","updateResizablePanes","hideResizer","getPaneDetails","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","sizeValue","seaprator","splitBar","selectAll","resizeBar","isVertical","removeAttribute","setAttribute","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","addMouseActions","clonedEle","parentNode","currentSeparator","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","addEventListener","getEventType","e","indexOf","updateCurrentSeparator","isSeparator","isSeparatorLine","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","document","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","preventDefault","eventArgs","event","pane","previousPane","nextPane","cancel","trigger","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prePaneIndex","nextPaneIndex","prevPaneIndex","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","fromElements","compile","item","append","childElement","nodeType","destroy","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component"],"mappings":"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"}